{
  "version": 3,
  "sources": ["../../../../../../node_modules/angular-plotly.js/fesm2022/angular-plotly.js.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, input, output, ViewChild, Component, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"plot\"];\nconst _c1 = [\"*\"];\nclass PlotlyService {\n  static {\n    this.instances = [];\n  }\n  static {\n    this.plotly = undefined;\n  }\n  static {\n    this.moduleName = undefined;\n  }\n  static setModuleName(moduleName) {\n    PlotlyService.moduleName = moduleName;\n  }\n  static getModuleName() {\n    return PlotlyService.moduleName;\n  }\n  static setPlotly(plotly) {\n    if (typeof plotly === 'object' && typeof plotly.react !== 'function') {\n      throw new Error('Invalid plotly.js version. Please, use any version above 1.40.0');\n    }\n    PlotlyService.moduleName = 'PlotlyJS';\n    PlotlyService.plotly = plotly;\n  }\n  static insert(instance) {\n    const index = PlotlyService.instances.indexOf(instance);\n    if (index === -1) {\n      PlotlyService.instances.push(instance);\n    }\n    return instance;\n  }\n  static remove(div) {\n    const index = PlotlyService.instances.indexOf(div);\n    if (index >= 0) {\n      PlotlyService.instances.splice(index, 1);\n      PlotlyService.plotly.purge(div);\n    }\n  }\n  getInstanceByDivId(id) {\n    for (const instance of PlotlyService.instances) {\n      if (instance && instance.id === id) {\n        return instance;\n      }\n    }\n    return undefined;\n  }\n  async getPlotly() {\n    await this.waitFor(() => this._getPlotly() !== 'waiting');\n    return this._getPlotly();\n  }\n  _getPlotly() {\n    if (typeof PlotlyService.plotly === 'undefined') {\n      const msg = PlotlyService.moduleName === 'ViaCDN' ? `Error loading Peer dependency plotly.js from CDN url` : `Peer dependency plotly.js isn't installed`;\n      throw new Error(msg);\n    }\n    return PlotlyService.plotly;\n  }\n  waitFor(fn) {\n    return new Promise(resolve => {\n      const localFn = () => {\n        fn() ? resolve() : setTimeout(localFn, 10);\n      };\n      localFn();\n    });\n  }\n  async newPlot(div, data, layout, config, frames) {\n    await this.waitFor(() => this._getPlotly() !== 'waiting');\n    if (frames) {\n      const obj = {\n        data,\n        layout,\n        config,\n        frames\n      };\n      return this._getPlotly().newPlot(div, obj).then(() => PlotlyService.insert(div));\n    }\n    return this._getPlotly().newPlot(div, data, layout, config).then(() => PlotlyService.insert(div));\n  }\n  plot(div, data, layout, config, frames) {\n    if (frames) {\n      const obj = {\n        data,\n        layout,\n        config,\n        frames\n      };\n      return this._getPlotly().newPlot(div, obj);\n    }\n    return this._getPlotly().newPlot(div, data, layout, config);\n  }\n  update(div, data, layout, config, frames) {\n    if (frames) {\n      const obj = {\n        data,\n        layout,\n        config,\n        frames\n      };\n      return this._getPlotly().react(div, obj);\n    }\n    return this._getPlotly().react(div, data, layout, config);\n  }\n  resize(div) {\n    return this._getPlotly().Plots.resize(div);\n  }\n  static {\n    this.ɵfac = function PlotlyService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PlotlyService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PlotlyService,\n      factory: PlotlyService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlotlyService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\n// @dynamic\nclass PlotlyComponent {\n  constructor(plotly, iterableDiffers, keyValueDiffers) {\n    this.plotly = plotly;\n    this.iterableDiffers = iterableDiffers;\n    this.keyValueDiffers = keyValueDiffers;\n    this.defaultClassName = 'js-plotly-plot';\n    this.data = input();\n    this.layout = input();\n    this.config = input();\n    this.frames = input();\n    this.style = input();\n    this.divId = input();\n    this.revision = input(0);\n    this.className = input();\n    this.debug = input(false);\n    this.useResizeHandler = input(false);\n    this.updateOnLayoutChange = input(true);\n    this.updateOnDataChange = input(true);\n    this.updateOnlyWithRevision = input(false);\n    this.initialized = output();\n    this.update = output();\n    this.purge = output();\n    this.error = output();\n    this.afterExport = output();\n    this.afterPlot = output();\n    this.animated = output();\n    this.animatingFrame = output();\n    this.animationInterrupted = output();\n    this.autoSize = output();\n    this.beforeExport = output();\n    this.beforeHover = output();\n    this.buttonClicked = output();\n    /**\n     * @deprecated DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. Please check https://github.com/plotly/angular-plotly.js#FAQ\n     */\n    this.click = output();\n    this.plotlyClick = output();\n    this.clickAnnotation = output();\n    this.deselect = output();\n    this.doubleClick = output();\n    this.framework = output();\n    this.hover = output();\n    this.legendClick = output();\n    this.legendDoubleClick = output();\n    /**\n     * @deprecated DEPRECATED: Event react is not list as an plotly.js event\n     */\n    this.react = output();\n    this.relayout = output();\n    this.relayouting = output();\n    this.restyle = output();\n    this.redraw = output();\n    this.selected = output();\n    this.selecting = output();\n    this.sliderChange = output();\n    this.sliderEnd = output();\n    this.sliderStart = output();\n    this.sunburstclick = output();\n    this.transitioning = output();\n    this.transitionInterrupted = output();\n    this.unhover = output();\n    /**\n     * @deprecated DEPRECATED: Event treemapclick is not list as an plotly.js event\n     */\n    this.treemapclick = output();\n    this.webglcontextlost = output();\n    this.eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize', 'beforeExport', 'beforeHover', 'buttonClicked', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover', 'legendClick', 'legendDoubleClick', 'react', 'relayout', 'relayouting', 'restyle', 'redraw', 'selected', 'selecting', 'sliderChange', 'sliderEnd', 'sliderStart', 'sunburstclick', 'transitioning', 'transitionInterrupted', 'unhover', 'treemapclick', 'webglcontextlost'];\n  }\n  ngOnInit() {\n    this.createPlot().then(() => {\n      const figure = this.createFigure();\n      this.initialized.emit(figure);\n    });\n  }\n  ngOnDestroy() {\n    if (typeof this.resizeHandler === 'function') {\n      this.getWindow().removeEventListener('resize', this.resizeHandler);\n      this.resizeHandler = undefined;\n    }\n    if (this.plotlyInstance) {\n      const figure = this.createFigure();\n      this.purge.emit(figure);\n      PlotlyService.remove(this.plotlyInstance);\n    }\n  }\n  ngOnChanges(changes) {\n    let shouldUpdate = false;\n    const revision = changes['revision'];\n    if (revision && !revision.isFirstChange()) {\n      shouldUpdate = true;\n    }\n    const debug = changes['debug'];\n    if (debug && !debug.isFirstChange()) {\n      shouldUpdate = true;\n    }\n    if (shouldUpdate) {\n      this.updatePlot();\n    }\n    this.updateWindowResizeHandler();\n  }\n  ngDoCheck() {\n    if (this.updateOnlyWithRevision()) {\n      return false;\n    }\n    let shouldUpdate = false;\n    if (this.updateOnLayoutChange()) {\n      if (this.layoutDiffer) {\n        const layoutHasDiff = this.layoutDiffer.diff(this.layout());\n        if (layoutHasDiff) {\n          shouldUpdate = true;\n        }\n      } else if (this.layout()) {\n        this.layoutDiffer = this.keyValueDiffers.find(this.layout()).create();\n      } else {\n        this.layoutDiffer = undefined;\n      }\n    }\n    if (this.updateOnDataChange()) {\n      if (this.dataDiffer) {\n        const dataHasDiff = this.dataDiffer.diff(this.data());\n        if (dataHasDiff) {\n          shouldUpdate = true;\n        }\n      } else if (Array.isArray(this.data())) {\n        this.dataDiffer = this.iterableDiffers.find(this.data()).create(this.dataDifferTrackBy);\n      } else {\n        this.dataDiffer = undefined;\n      }\n    }\n    if (shouldUpdate && this.plotlyInstance) {\n      this.updatePlot();\n    }\n  }\n  getData() {\n    return this.data() ?? [];\n  }\n  getWindow() {\n    return window;\n  }\n  getClassName() {\n    let classes = [this.defaultClassName];\n    const className = this.className();\n    if (Array.isArray(className)) {\n      classes = classes.concat(className);\n    } else if (className) {\n      classes.push(className);\n    }\n    return classes.join(' ');\n  }\n  createPlot() {\n    return this.plotly.newPlot(this.plotEl.nativeElement, this.getData(), this.layout(), this.config(), this.frames()).then(plotlyInstance => {\n      this.plotlyInstance = plotlyInstance;\n      this.getWindow().gd = this.debug ? plotlyInstance : undefined;\n      this.eventNames.forEach(name => {\n        const eventName = `plotly_${name.toLowerCase()}`;\n        const event = this[name];\n        plotlyInstance.on(eventName, data => event.emit(data));\n      });\n      plotlyInstance.on('plotly_click', data => {\n        this.plotlyClick.emit(data);\n      });\n      this.updateWindowResizeHandler();\n    }, err => {\n      console.error('Error while plotting:', err);\n      this.error.emit(err);\n    });\n  }\n  createFigure() {\n    const p = this.plotlyInstance;\n    const figure = {\n      data: p.data,\n      layout: p.layout,\n      frames: p._transitionData ? p._transitionData._frames : null\n    };\n    return figure;\n  }\n  updatePlot() {\n    if (!this.plotlyInstance) {\n      const error = new Error(`Plotly component wasn't initialized`);\n      this.error.emit(error);\n      throw error;\n    }\n    const layout = {\n      ...this.layout()\n    };\n    return this.plotly.update(this.plotlyInstance, this.getData(), layout, this.config(), this.frames()).then(() => {\n      const figure = this.createFigure();\n      this.update.emit(figure);\n    }, err => {\n      console.error('Error while updating plot:', err);\n      this.error.emit(err);\n    });\n  }\n  updateWindowResizeHandler() {\n    if (this.useResizeHandler()) {\n      if (this.resizeHandler === undefined) {\n        this.resizeHandler = () => this.plotly.resize(this.plotlyInstance);\n        this.getWindow().addEventListener('resize', this.resizeHandler);\n      }\n    } else {\n      if (typeof this.resizeHandler === 'function') {\n        this.getWindow().removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = undefined;\n      }\n    }\n  }\n  dataDifferTrackBy(_, item) {\n    const obj = Object.assign({}, item, {\n      uid: ''\n    });\n    return JSON.stringify(obj);\n  }\n  static {\n    this.ɵfac = function PlotlyComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PlotlyComponent)(i0.ɵɵdirectiveInject(PlotlyService), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i0.KeyValueDiffers));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: PlotlyComponent,\n      selectors: [[\"plotly-plot\"]],\n      viewQuery: function PlotlyComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.plotEl = _t.first);\n        }\n      },\n      inputs: {\n        data: [1, \"data\"],\n        layout: [1, \"layout\"],\n        config: [1, \"config\"],\n        frames: [1, \"frames\"],\n        style: [1, \"style\"],\n        divId: [1, \"divId\"],\n        revision: [1, \"revision\"],\n        className: [1, \"className\"],\n        debug: [1, \"debug\"],\n        useResizeHandler: [1, \"useResizeHandler\"],\n        updateOnLayoutChange: [1, \"updateOnLayoutChange\"],\n        updateOnDataChange: [1, \"updateOnDataChange\"],\n        updateOnlyWithRevision: [1, \"updateOnlyWithRevision\"]\n      },\n      outputs: {\n        initialized: \"initialized\",\n        update: \"update\",\n        purge: \"purge\",\n        error: \"error\",\n        afterExport: \"afterExport\",\n        afterPlot: \"afterPlot\",\n        animated: \"animated\",\n        animatingFrame: \"animatingFrame\",\n        animationInterrupted: \"animationInterrupted\",\n        autoSize: \"autoSize\",\n        beforeExport: \"beforeExport\",\n        beforeHover: \"beforeHover\",\n        buttonClicked: \"buttonClicked\",\n        click: \"click\",\n        plotlyClick: \"plotlyClick\",\n        clickAnnotation: \"clickAnnotation\",\n        deselect: \"deselect\",\n        doubleClick: \"doubleClick\",\n        framework: \"framework\",\n        hover: \"hover\",\n        legendClick: \"legendClick\",\n        legendDoubleClick: \"legendDoubleClick\",\n        react: \"react\",\n        relayout: \"relayout\",\n        relayouting: \"relayouting\",\n        restyle: \"restyle\",\n        redraw: \"redraw\",\n        selected: \"selected\",\n        selecting: \"selecting\",\n        sliderChange: \"sliderChange\",\n        sliderEnd: \"sliderEnd\",\n        sliderStart: \"sliderStart\",\n        sunburstclick: \"sunburstclick\",\n        transitioning: \"transitioning\",\n        transitionInterrupted: \"transitionInterrupted\",\n        unhover: \"unhover\",\n        treemapclick: \"treemapclick\",\n        webglcontextlost: \"webglcontextlost\"\n      },\n      features: [i0.ɵɵProvidersFeature([PlotlyService]), i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c1,\n      decls: 3,\n      vars: 3,\n      consts: [[\"plot\", \"\"], [3, \"ngClass\", \"ngStyle\"]],\n      template: function PlotlyComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", ctx.getClassName())(\"ngStyle\", ctx.style());\n          i0.ɵɵattribute(\"id\", ctx.divId());\n        }\n      },\n      dependencies: [CommonModule, i2.NgClass, i2.NgStyle],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlotlyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'plotly-plot',\n      standalone: true,\n      imports: [CommonModule],\n      template: `<div #plot [attr.id]=\"divId()\" [ngClass]=\"getClassName()\" [ngStyle]=\"style()\">\n      <ng-content></ng-content>\n    </div>`,\n      providers: [PlotlyService]\n    }]\n  }], () => [{\n    type: PlotlyService\n  }, {\n    type: i0.IterableDiffers\n  }, {\n    type: i0.KeyValueDiffers\n  }], {\n    plotEl: [{\n      type: ViewChild,\n      args: ['plot', {\n        static: true\n      }]\n    }]\n  });\n})();\nclass PlotlyModule {\n  constructor() {\n    if (!this.isValid()) {\n      const msg = 'Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start' + ' to see how to add PlotlyJS to your project.';\n      throw new Error(msg);\n    }\n  }\n  isValid() {\n    return PlotlyService.plotly !== undefined && (typeof PlotlyService.plotly.plot === 'function' || typeof PlotlyService.plotly.newPlot === 'function');\n  }\n  static forRoot(plotlyjs) {\n    PlotlyService.setPlotly(plotlyjs);\n    return {\n      ngModule: PlotlyModule,\n      providers: [PlotlyService]\n    };\n  }\n  static {\n    this.ɵfac = function PlotlyModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PlotlyModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: PlotlyModule,\n      imports: [PlotlyComponent],\n      exports: [PlotlyComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [PlotlyService],\n      imports: [PlotlyComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlotlyModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlotlyComponent],\n      providers: [PlotlyService],\n      exports: [PlotlyComponent]\n    }]\n  }], () => [], null);\n})();\n\n/*\n * Public API Surface of plotly\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PlotlyComponent, PlotlyModule, PlotlyService };\n"],
  "mappings": "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",
  "names": []
}
